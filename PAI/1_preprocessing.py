# -*- coding: utf-8 -*-
"""1_preprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VYcwaMM3FICbi9SXhR116r3dgazaEalN
"""

import pandas as pd
import os
from PIL import Image
import matplotlib.pyplot as plt

# Mount Google Drive if not already mounted
from google.colab import drive
drive.mount('/content/drive')

# Define the path to the classifications.csv file
classifications_path = '/content/classifications.csv'

# Load the classifications.csv file
data = pd.read_csv(classifications_path)

# Define the path to the directory containing the images on Google Drive
drive_images_directory = '/content/drive/MyDrive/TP - PAI/dataset - PAI'

# Iterate over the DataFrame rows to cut and save as sub-images
for index, row in data.iterrows():
    # Construct the full path to the image file
    image_path = os.path.join(drive_images_directory, row['image_filename'])

    # Check if the image file exists
    if os.path.exists(image_path):
        # If the file exists, load the image and perform processing
        image = Image.open(image_path)

        # Obtain the coordinates of the cell nuclei
        nucleus_x = row['nucleus_x']
        nucleus_y = row['nucleus_y']

        # Define the coordinates for the top-left corner of the crop box
        top_left_x = nucleus_x - 100
        top_left_y = nucleus_y - 100

        # Ensure the coordinates are within image boundaries
        if top_left_x < 0:
            top_left_x = 0
        if top_left_y < 0:
            top_left_y = 0

        # Crop the sub-image 100x100 ending at the cell nucleus
        sub_image = image.crop((top_left_x, top_left_y, nucleus_x, nucleus_y))

        # Save the sub-image in the appropriate directory according to the class
        class_dir = row['bethesda_system']

        # Create the directory if it doesn't exist yet
        if not os.path.exists(class_dir):
            os.makedirs(class_dir)

        # Save the sub-image with a unique name identifying the cell
        sub_image.save(os.path.join(class_dir, f"{row['image_id']}_{row['cell_id']}.png"))

import cv2
from google.colab.patches import cv2_imshow

# Define the path to the SCC directory
scc_directory = '/content/drive/MyDrive/TP - PAI/SCC'

# List all files in the SCC directory
scc_images = os.listdir(scc_directory)

# Print and display each image in the SCC directory
print("Images in the SCC directory:")
for image_name in scc_images:
    image_path = os.path.join(scc_directory, image_name)
    print(image_name)  # Print the name of the image

    # Load the image using OpenCV
    image = cv2.imread(image_path)

    # Check if the image was loaded successfully
    if image is not None:
        cv2_imshow(image)  # Display the image using cv2_imshow
    else:
        print(f"Failed to load image: {image_name}")

from PIL import Image
import os
import matplotlib.pyplot as plt

# Mount Google Drive if not already mounted
from google.colab import drive
drive.mount('/content/drive')

# Define the path to the SCC directory on Google Drive
scc_directory = '/content/drive/MyDrive/TP - PAI/SCC'

# List all files in the SCC directory
scc_images = os.listdir(scc_directory)

# Check if there are any images in the directory
if scc_images:
    # Get the first image file in the directory
    example_image_path = os.path.join(scc_directory, scc_images[0])

    # Open the image
    example_image = Image.open(example_image_path)

    # Show the image using Matplotlib
    plt.imshow(example_image)
    plt.axis('off')  # Hide axes
    plt.show()
else:
    print("No images found in the SCC directory.")
